{
	"info": {
		"_postman_id": "54cff508-9a2f-4cde-b92b-cdaaad7f3346",
		"name": "ScrumTeam CRUD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "11534156"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "Get all bugs",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/bugs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get one bug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/bugs/4",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs",
								"4"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get bugs with given text",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should return bug with text 404\", function (){\r",
									"    pm.expect(pm.response.text()).to.include('404');\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/bugs?q=404",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs"
							],
							"query": [
								{
									"key": "q",
									"value": "404"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "POST",
			"item": [
				{
					"name": "Create new bug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Should return correct title\", function () {\r",
									"    pm.expect(json.title).to.eql('Incorrect response headers');\r",
									"});\r",
									"\r",
									"pm.test(\"Should return status to set in progress\", function () {\r",
									"    pm.expect(json.status).to.eql('in progress');\r",
									"});\r",
									"\r",
									"pm.globals.set('bugId', json.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Incorrect response headers\",\r\n    \"description\": \"When I send a GET request I get only 11 headers. It should response with 12.\",\r\n    \"employeeId\": 1,\r\n    \"status\": \"in progress\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/bugs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete existing bug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/bugs/{{bugId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs",
								"{{bugId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PUT",
			"item": [
				{
					"name": "Create new bug to edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Should return correct title\", function () {\r",
									"    pm.expect(json.title).to.eql('Incorrect response headers');\r",
									"});\r",
									"\r",
									"pm.test(\"Should return status to set in progress\", function () {\r",
									"    pm.expect(json.status).to.eql('in progress');\r",
									"});\r",
									"\r",
									"pm.globals.set('bugId', json.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Incorrect response headers\",\r\n    \"description\": \"When I send a GET request I get only 11 headers. It should response with 12.\",\r\n    \"employeeId\": 1,\r\n    \"status\": \"in progress\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/bugs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Edit bug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should return status set to open\", function (){\r",
									"    pm.expect(json.status).to.eql('open');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Incorrect response headers\",\r\n    \"description\": \"When I send a GET request I get only 11 headers. It should response with 12.\",\r\n    \"employeeId\": 1,\r\n    \"status\": \"open\",\r\n    \"id\": 5\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/bugs/{{bugId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs",
								"{{bugId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete existing bug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/bugs/{{bugId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs",
								"{{bugId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PATCH",
			"item": [
				{
					"name": "Create new bug to edit",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Should return correct title\", function () {\r",
									"    pm.expect(json.title).to.eql('Incorrect response headers');\r",
									"});\r",
									"\r",
									"pm.test(\"Should return status to set in progress\", function () {\r",
									"    pm.expect(json.status).to.eql('in progress');\r",
									"});\r",
									"pm.globals.set('bugId', json.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Incorrect response headers\",\r\n    \"description\": \"When I send a GET request I get only 11 headers. It should response with 12.\",\r\n    \"employeeId\": 1,\r\n    \"status\": \"in progress\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/bugs/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "PATCH edit bug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"pm.test(\"Should return status set to closed\", function (){\r",
									"    pm.expect(json.status).to.eql('closed');\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": \"closed\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/bugs/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{bugId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete existing bug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/bugs/{{bugId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs",
								"{{bugId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "DELETE",
			"item": [
				{
					"name": "Create new bug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const json = pm.response.json();\r",
									"\r",
									"pm.test(\"Status code is 201\", function () {\r",
									"    pm.response.to.have.status(201);\r",
									"});\r",
									"\r",
									"pm.test(\"Should return correct title\", function () {\r",
									"    pm.expect(json.title).to.eql('Incorrect response headers');\r",
									"});\r",
									"\r",
									"pm.test(\"Should return status to set in progress\", function () {\r",
									"    pm.expect(json.status).to.eql('in progress');\r",
									"});\r",
									"\r",
									"pm.globals.set('bugId', json.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"Incorrect response headers\",\r\n    \"description\": \"When I send a GET request I get only 11 headers. It should response with 12.\",\r\n    \"employeeId\": 1,\r\n    \"status\": \"in progress\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/bugs",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete existing bug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/bugs/{{bugId}}",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs",
								"{{bugId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete non existing bug",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/bugs/11",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"bugs",
								"11"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}